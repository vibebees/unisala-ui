---
import { siteConfig } from "@/config/site";
import "@/styles/global.css";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, siteConfig.url);

const {
  title,
  description = siteConfig.description,
  image = siteConfig.ogImage,
} = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/calsans-semibold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title ? `${title} | Unisala` : "Unisala"}</title>
<meta name="title" content={title ? `${title} | Unisala` : "Unisala"} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={title ? `${title} | Unisala` : "Unisala"} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, siteConfig.url).toString()} />
<meta property="og:site_name" content={siteConfig.name} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonicalURL} />
<meta property="twitter:title" content={title ? `${title} | Unisala` : "Unisala"} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, siteConfig.url).toString()} />

<!-- Dark mode with prevent flickering flash between navigations -->
<script is:inline>
const setDarkMode = () => {
  const theme = (() => {
    if (
      typeof localStorage !== "undefined" &&
      localStorage.getItem("theme")
    ) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
};

setDarkMode();
document.addEventListener("astro:after-swap", setDarkMode);
</script>

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-MD5HNN6SQS"></script>
<script  is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-MD5HNN6SQS');
</script>
  <script  is:inline>
    (function (c, l, a, r, i, t, y) {
      c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };
      t = l.createElement(r); t.async = 1; t.src = "https://www.clarity.ms/tag/" + i;
      y = l.getElementsByTagName(r)[0]; y.parentNode.insertBefore(t, y);
    })(window, document, "clarity", "script", "lc6yzoxipb");
  </script>




<ViewTransitions />
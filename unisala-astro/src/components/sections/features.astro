---
import { Icon } from 'astro-icon/components';
---

<div class="w-full max-w-4xl mx-auto my-8 relative space-y-6 py-12 sm:py-10 lg:py-10" id="video-container">
  <div class="skeleton w-full aspect-video rounded-lg"></div>
</div>

<script>
  const videoContainer = document.getElementById('video-container');
  const skeleton = videoContainer?.querySelector('.skeleton');

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          loadVideo();
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.1 }
  );

  if (videoContainer) {
    observer.observe(videoContainer);
  }

  function loadVideo() {
    const video = document.createElement('video');
    video.className = 'w-full rounded-lg hidden';
    video.controls = true;
    video.preload = 'auto';
    video.muted = true;
    video.autoplay = true;
    video.loop = true;

    const source = document.createElement('source');
    source.src = 'https://d2wpk2fhu8mz8q.cloudfront.net/unisala-story.mp4';
    source.type = 'video/mp4';

    video.appendChild(source);

    video.addEventListener('loadeddata', () => {
      if (skeleton) {
        skeleton.remove();
      }
      video.classList.remove('hidden');
      addMuteToggle(video);
    });

    videoContainer?.appendChild(video);
  }

  function addMuteToggle(video: HTMLVideoElement) {
    const muteButton = document.createElement('button');
    muteButton.className = 'absolute bottom-4 right-4 bg-black bg-opacity-50 text-white p-2 rounded-full';
    muteButton.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2" />
    </svg>`;

    muteButton.addEventListener('click', () => {
      video.muted = !video.muted;
      updateMuteButtonIcon(muteButton, video.muted);
    });

    videoContainer?.appendChild(muteButton);
  }

  function updateMuteButtonIcon(button: HTMLButtonElement, isMuted: any) {
    button.innerHTML = isMuted
      ? `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2" />
        </svg>`
      : `<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />
        </svg>`;
  }
</script>

<style>
  .skeleton {
    background-color: #e2e8f0;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }
</style>
---
import MainLayout from '@/layouts/main-layout.astro';
import MediumFeed from '@/components/feed/feed.tsx';
import { fetchApi } from '@/utils/api.utility';
import { userServiceGql } from '@/datasource/servers';

const getNewsFeed = `
    query fetchFeedV2($feedQuery: FeedQueryInput) {
      fetchFeedV2(feedQuery: $feedQuery) {
        validToken
        data {
          section
          postText
          upVoted
          upVoteCount
          postCommentsCount
          type
          date
          _id
          title
          images
          user {
            firstName
            lastName
            picture
            username
            _id
          }
        }
      }
    }
`;

const GetTopActiveSpaces = `
    query getTopActiveSpaces($limit: Int) {
      getTopActiveSpaces(limit: $limit) {
        status {
          success
          message
        }
        spaceCategory {
          _id
          name
        }
      }
    }
`;

let articles = [];
let staffPicks = [];
let topics = [];
let error = '';

try {
  // Fetch regular articles
  const regularFeed = await fetchApi(userServiceGql, {
    method: 'POST',
    body: JSON.stringify({
      query: getNewsFeed,
      variables: {
        feedQuery: {
        feedType: 'newsfeed',
          page: 0
        }
      }
    })
  });

  // Fetch staff picks
  const staffPicksResult = await fetchApi(userServiceGql, {
    method: 'POST',
    body: JSON.stringify({
      query: getNewsFeed,
      variables: {
        feedQuery: {
          feedType: 'org',
          page: 0,
          pageSize: 6,
        }
      }
    })
  });

  // Fetch top active spaces for topics
  const topicsResult = await fetchApi(userServiceGql, {
    method: 'POST',
    body: JSON.stringify({
      query: GetTopActiveSpaces,
      variables: {
        limit: 9
      }
    })
  });

  if (regularFeed.errors || staffPicksResult.errors || topicsResult.errors) {
    throw new Error('Error fetching data');
  }

  articles = regularFeed.data?.fetchFeedV2?.data || [];
  staffPicks = staffPicksResult.data?.fetchFeedV2?.data || [];
  topics = topicsResult.data?.getTopActiveSpaces?.spaceCategory || [];
} catch (e) {
  console.error('Error fetching data:', e);
  error = e instanceof Error ? e.message : String(e);
}
---

<MainLayout title="Medium-style Feed">
  {error && <div>Error: {error}</div>}
  {!error && (
    <MediumFeed
      articles={articles}
      staffPicks={staffPicks}
      topics={topics}
    />
  )}
</MainLayout>